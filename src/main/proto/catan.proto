syntax = "proto3";

package catan;

enum InviteResponseStatus {
  ACCEPTED = 0;
  DECLINED = 1;
  PENDING = 2;
  EXPIRED = 3;
}

enum Color {
  RED = 0;
  BLUE = 1;
  WHITE = 2;
  ORANGE = 3;
  BLACK = 4;
  GREEN = 5;
}

service CatanService {
  // הרשמה / כניסה
  rpc register(RegisterRequest) returns (ConnectionResponse);
  rpc login(LoginRequest) returns (ConnectionResponse);
  rpc sendRegisterOtp(EmailRequest) returns (ConnectionResponse);
  rpc sendLoginOtp(EmailRequest) returns (ConnectionResponse);
  rpc verifyRegisterOtp(VerifyOtpRequest) returns (ConnectionResponse);
  rpc verifyLoginOtp(VerifyOtpRequest) returns (ConnectionResponse);

  // ניהול קבוצות
  rpc getAllGroups(UserRequest) returns (AllGroupsResponse);
  rpc createGroup(CreateGroupRequest) returns (GroupResponse);
  rpc inviteToGroup(InviteRequest) returns (GroupResponse);
  rpc respondToGroupInvitation(InviteResponse) returns (GroupResponse);
  rpc getUserInvites(UserRequest) returns (InviteListResponse);
  rpc listGroupGames(GroupRequest) returns (GameListResponse);

  // ניהול משחק
  rpc createGame(GameActionRequest) returns (GameResponse);
  rpc startGame(GameActionRequest) returns (GameResponse);
  rpc endGame(GameActionRequest) returns (GameResponse);
  rpc leaveGame(GameActionRequest) returns (GameResponse);

  // תור
  rpc startTurn(GameActionRequest) returns (GameResponse);
  rpc endTurn(GameActionRequest) returns (GameResponse);

  // פעולות שחקן במשחק
  rpc buildSettlement(BuildRequest) returns (GameResponse);
  rpc promoteToCity(BuildRequest) returns (GameResponse);
  rpc buildRoad(BuildRequest) returns (GameResponse);
  rpc rollDices(GameActionRequest) returns (DiceRollResponse);
  rpc moveRobber(MoveRobberRequest) returns (GameResponse);
  rpc stealCardFromPlayer(StealRequest) returns (GameResponse);

  // קלפי פיתוח
  rpc buyDevelopmentCard(BuyDevCardRequest) returns (GameResponse);
  rpc playDevelopmentCard(PlayDevCardRequest) returns (GameResponse);
  rpc monopolyCardUse(MonopolyUseRequest) returns (GameResponse);
  rpc roadBuildingCardUse(RoadBuildingRequest) returns (GameResponse);

  // תור ותחזוקה
  rpc discardHalfResources(DiscardRequest) returns (GameResponse);
  rpc getPlayerInfo(PlayerInfoRequest) returns (PlayerInfoResponse);

  // מסחר
  rpc tradeRequest(TradeRequest) returns (TradeResponse);
  rpc respondToTrade(TradeResponse) returns (TradeResult);

  // ניהול שחקנים במשחק
  rpc kickPlayer(KickRequest) returns (GameResponse);
  rpc reportPlayer(ReportRequest) returns (GameResponse);
  rpc updatePlayerColor(UpdateColorRequest) returns (GameResponse);
  rpc getGamePlayers(GameActionRequest) returns (GamePlayersResponse);

  // צ'אט ואירועים
  rpc sendGroupMessage(GroupChatMessage) returns (ACK);
  rpc subscribeGroupMessages(GroupSubscribeRequest) returns (stream GroupChatMessage);

  rpc sendGameMessage(GameChatMessage) returns (ACK);                  // כבר קיים כ־sendMessage
  rpc subscribeGameMessages(GameSubscribeRequest) returns (stream GameChatMessage);
  rpc subscribeToGameEvents(GameSubscribeRequest) returns (stream GameEvent);
}
// ========== הרשמה / התחברות ==========
message RegisterRequest {
  string username = 1;
  string email = 2;
  string password = 3;
}
message LoginRequest {
  string email = 1;
  string password = 2;
}
message EmailRequest {
  string email = 1;
}
message VerifyOtpRequest {
  string email = 1;
  string otp = 2;
}
message ConnectionResponse {
  string username = 1;
  bool success = 2;
  repeated string errors = 3;
  string message = 4;
  string userId = 5;
}

// ========== קבוצות ==========
message UserRequest {
  string userId = 1;
}
message AllGroupsResponse {
  repeated GroupInfo groups = 1;
}
message GroupInfo {
  string groupId = 1;
  string groupName = 2;
  string creatorUsername = 3;
}
message CreateGroupRequest {
  string creatorId = 1;
  string groupName = 2;
}
message GroupResponse {
  bool success = 1;
  string message = 2;
  string groupId = 3;
}
message InviteRequest{
  string inviteId = 1;
  string groupId = 2;
  string senderId = 3;
  string receiverId = 4;
  int64 timestamp = 5;
}
message InviteResponse{
  string inviteId = 1;
  string groupId = 2;
  string senderId = 3;
  string receiverId = 4;
  InviteResponseStatus status = 5;
}
message InviteListResponse {
  repeated ProtoInvite invites = 1;
}
message ProtoInvite {
  string inviteId = 1;
  string groupId = 2;
  string senderId = 3;
  string invitedUserId = 4;
  int64 timestamp = 5;
  InviteResponseStatus status = 6;
}
message GroupRequest {
  string groupId = 1;
}
message GameListResponse {
  repeated string gameIds = 1;
}

// ========== משחק ==========
message GameActionRequest {
  string gameId = 1;
  string userId = 2;
  string groupId = 3;
  int64 timestamp = 4;
}
message GameResponse {
  bool success = 1;
  string message = 2;
  string gameId = 3;
}

// ========== בנייה ==========
message BuildRequest {
  string gameId = 1;
  string userId = 2;
  int32 x = 3;
  int32 y = 4;
}
message MoveRobberRequest {
  string gameId = 1;
  int32 tileX = 2;
  int32 tileY = 3;
}
message StealRequest {
  string gameId = 1;
  string fromUserId = 2;
  string toUserId = 3;
}

// ========== קלפי פיתוח ==========
message BuyDevCardRequest {
  string gameId = 1;
  string userId = 2;
}
message PlayDevCardRequest {
  string gameId = 1;
  string userId = 2;
  string cardType = 3;
}
message MonopolyUseRequest {
  string gameId = 1;
  string userId = 2;
  string resourceType = 3;
}
message RoadBuildingRequest {
  string gameId = 1;
  string userId = 2;
  repeated BuildRequest roads = 3;
}

// ========== תור ==========
message DiscardRequest {
  string userId = 1;
  string gameId = 2;
  repeated string discardedResources = 3;
}
message DiceRollResponse {
  int32 firstDie = 1;
  int32 secondDie = 2;
  int32 total = 3;
}

// ========== מידע ==========
message PlayerInfoRequest {
  string userId = 1;
  string gameId = 2;
}
message PlayerInfoResponse {
  string username = 1;
  repeated string resources = 2;
  int32 settlements = 3;
  int32 cities = 4;
  int32 roads = 5;
}

// ========== צבע שחקן ==========
message UpdateColorRequest {
  string playerId = 1;
  Color color = 2;
  string gameId = 3;
}
message GamePlayersResponse {
  repeated PlayerProto players = 1;
}
message PlayerProto {
  string playerId = 1;
  string username = 2;
  string color = 3;
  bool isTurn = 4;
}

// ========== מסחר ==========
message TradeRequest {
  string gameId = 1;
  string fromUserId = 2;
  string toUserId = 3;
  map<string, int32> offer = 4;
  map<string, int32> request = 5;
}
message TradeResponse {
  string gameId = 1;
  string fromUserId = 2;
  string toUserId = 3;
  bool accepted = 4;
}
message TradeResult {
  bool success = 1;
  string message = 2;
}

// ========== צ'אט ==========
message GameChatMessage {
  string gameId = 1;
  string fromUserId = 2;
  bytes content = 3;
  int64 timestamp = 4;
  string messageId = 5;
  string fromUsername = 6;
}
message GroupChatMessage {
  string groupId = 1;
  string fromUserId = 2;
  bytes content = 3;
  int64 timestamp = 4;
  string messageId = 5;
  string fromUsername = 6;
}
message ACK {
  bool received = 1;
}
message GameSubscribeRequest {
  string gameId = 1;
  string userId = 2;
}
message GroupSubscribeRequest {
  string groupId = 1;
  string userId = 2;
}
message GameEvent {
  string type = 1;
  string description = 2;
  int64 timestamp = 3;
}

// ========== ניהול ==========
message KickRequest {
  string gameId = 1;
  string adminUserId = 2;
  string targetUserId = 3;
}
message ReportRequest {
  string reportedUserId = 1;
  string reporterUserId = 2;
  string reason = 3;
}
message Empty {}